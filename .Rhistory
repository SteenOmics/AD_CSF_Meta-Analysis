#Calculate the average of the test on train model ones
three_way_aruocs <- three_way_aruocs %>%
#Calculate the average of the test on train model ones
three_way_aruocs <- three_way_aruocs %>%
mutate(averageAUROC = (seyfried_data_mann_model + mann_data_seyfried_model) / 2)
#Calculate the average of the test on train model ones
three_way_aruocs_changes <- three_way_aruocs %>%
mutate(averageAUROC = (seyfried_data_mann_model + mann_data_seyfried_model) / 2) %>%
distinct(averageAUROC)
View(three_way_aruocs_changes)
?distinct
#Calculate the average of the test on train model ones
three_way_aruocs_changes <- three_way_aruocs %>%
mutate(averageAUROC = (seyfried_data_mann_model + mann_data_seyfried_model) / 2) %>%
distinct(averageAUROC, .keep_all = T)
hist(three_way_aruocs$averageAUROC)
Seyfried_DF <- read_excel("Datasets/Seyfried_resultmatrix.xlsx")
Seyfried_DF[Seyfried_DF == 0] <- NA
Mann_DF <- read_excel("Datasets/Mann_Matrix.xlsx")
Mann_DF[Mann_DF == 0] <- NA
##### SEYFRIED PREPARE
cl <- colnames(Seyfried_DF[2:ncol(Seyfried_DF)])
Seyfried_resultmatrix <-  Seyfried_DF %>%
gather(cl, key = "Sample", value = "Intensity")
Seyfried_resultmatrix$DX <- grepl("Co", Seyfried_resultmatrix$Sample, fixed = T)
Seyfried_BoxPlot <-
Seyfried_resultmatrix %>%
filter(rowID %in% c("P04075", "P14618", "P07195")) %>%
mutate(Gene = ifelse(rowID == "P04075", "ALDOA", ifelse(rowID == "P14618", "PKM","LDHB"))) %>%
mutate(DX = ifelse(DX == TRUE, "C","AD")) %>%
ggplot(aes(DX, Intensity)) +
geom_boxplot(aes(fill = Gene, alpha = DX)) +
facet_wrap(. ~ Gene) +
scale_alpha_discrete(range = c(1, 0)) +
scale_fill_manual(values = c("#1ca375", "#827d9c", "#d15b01")) +
theme_pubr() +
ylim(-1, 1.5) +
ylab("Ratio") +
theme(axis.title.x=element_blank(),
legend.position = "none",
text = element_text(family="serif"))
plot(Seyfried_BoxPlot)
cl_mann <- colnames(Mann_DF[2:ncol(Mann_DF)])
Mann_resultmatrix <- Mann_DF %>%
gather(cl_mann, key = "Sample", value = "Intensity") %>%
mutate(Intensity = log2(Intensity))
Mann_resultmatrix$DX <- grepl("Co", Mann_resultmatrix$Sample, fixed = T)
#There is 17 proteins in this dataset where isoforms are specified.
#To make this data easily applicable to all the others, we average it.
Mann_resultmatrix <- Mann_resultmatrix %>%
group_by(Sample, rowID, DX) %>%
summarise(Intensity = mean(Intensity))
Mann_BoxPlot <-
Mann_resultmatrix %>%
filter(rowID %in% c("P04075", "P14618", "P07195")) %>%
mutate(Gene = ifelse(rowID == "P04075", "ALDOA", ifelse(rowID == "P14618", "PKM","LDHB"))) %>%
mutate(DX = ifelse(DX == TRUE, "C","AD")) %>%
ggplot(aes(DX, Intensity)) +
geom_boxplot(aes(fill = Gene, alpha = DX)) +
facet_wrap(. ~ Gene) +
scale_alpha_discrete(range = c(1, 0)) +
scale_fill_manual(values = c("#1ca375", "#827d9c", "#d15b01")) +
theme_pubr() +
ylim(17.5, 21.5) +
ylab("log2(Intensity)") +
theme(axis.title.x=element_blank(),
legend.position = "none",
text = element_text(family="serif"))
plot(Mann_BoxPlot)
Seyfried_ModelDF <- Seyfried_resultmatrix %>%
dplyr::filter(rowID %in% c("P04075", "P14618", "P07195")) %>%
dplyr::select(Sample, 'rowID', DX, Intensity) %>%
spread(key = "rowID", value = "Intensity")
Seyfried_ModelDF <- data.frame(Seyfried_ModelDF)
Seyfried_ModelDF$DX <- as.factor(Seyfried_ModelDF$DX)
#Create the Model
Seyfried_MarkerPanel <- glm(DX ~ P04075 + P14618 + P07195, data = Seyfried_ModelDF, family = 'binomial')
Mann_ModelDF <- Mann_resultmatrix %>%
dplyr::filter(rowID %in% c("P04075", "P14618", "P07195")) %>%
dplyr::select(Sample, 'rowID', DX, Intensity) %>%
spread(key = "rowID", value = "Intensity")
Mann_ModelDF$DX <- as.factor(Mann_ModelDF$DX)
#Create the Model
Mann_MarkerPanel <- glm(DX ~ P04075 + P14618 + P07195, data = Mann_ModelDF, family = 'binomial')
Seyfried_ModelDF$Seyfried_panel <- predict(Seyfried_MarkerPanel, Seyfried_ModelDF)
Seyfried_ModelDF$Mann_panel <- predict(Mann_MarkerPanel, Seyfried_ModelDF)
Mann_ModelDF$Mann_panel <- predict(Mann_MarkerPanel, Mann_ModelDF)
Mann_ModelDF$Seyfried_panel <- predict(Seyfried_MarkerPanel, Mann_ModelDF)
seyfried_seyfriedmodel <- roc(DX ~ Seyfried_panel, Seyfried_ModelDF)
seyfried_mannmodel <- roc(DX ~ Mann_panel, Seyfried_ModelDF)
seyfried_ALDOA <- roc(DX ~ P04075, Seyfried_ModelDF)
seyfried_PKM <- roc(DX ~ P14618, Seyfried_ModelDF)
seyfried_LDHB <- roc(DX ~ P07195, Seyfried_ModelDF)
ROC_SEYFRIED <- ggroc(list("ALDOA (0.85)" = seyfried_ALDOA,
"PKM (0.82)" = seyfried_PKM,
"LDHB (0.79)" = seyfried_LDHB,
"Model Bader (0.87)" = seyfried_mannmodel,
"Model Johnson (0.87)" = seyfried_seyfriedmodel), lwd = 1.5) +
scale_color_brewer(palette = "Dark2") +
theme_pubr() +
theme(legend.position = "right",
text = element_text(family="serif")) +
coord_fixed()
plot(ROC_SEYFRIED)
seyfried_seyfriedmodel
seyfried_mannmodel
Mann_seyfriedmodel <- roc(DX ~ Seyfried_panel, Mann_ModelDF)
Mann_mannmodel <- roc(DX ~ Mann_panel, Mann_ModelDF)
Mann_ALDOA <- roc(DX ~ P04075, Mann_ModelDF)
Mann_PKM <- roc(DX ~ P14618, Mann_ModelDF)
Mann_LDHB <- roc(DX ~ P07195, Mann_ModelDF)
ROC_MANN <- ggroc(list("ALDOA (0.81)" = Mann_ALDOA,
"PKM (0.78)" = Mann_PKM,
"LDHB (0.68)" = Mann_LDHB,
"Model Bader (0.82)" = Mann_mannmodel,
"Model Johnson (0.82)" = Mann_seyfriedmodel), lwd = 1.5) +
scale_color_brewer(palette = "Dark2") +
theme_pubr() +
theme(legend.position = "right",
text = element_text(family="serif"), aspect.ratio=1)
plot(ROC_MANN)
Mann_seyfriedmodel
Mann_mannmodel
ROC_MANN <- ggroc(list("ALDOA (0.81)" = Mann_ALDOA,
"PKM (0.78)" = Mann_PKM,
"LDHB (0.68)" = Mann_LDHB,
"Model Bader (0.82)" = Mann_mannmodel,
"Model Johnson (0.82)" = Mann_seyfriedmodel), lwd = 1.5) +
scale_color_brewer(palette = "Dark2") +
theme_pubr() +
theme(legend.position = "right",
text = element_text(family="serif"), aspect.ratio=1)
plot(ROC_MANN)
Seyfried_panel
Mann_ModelDF
Seyfried_panel
Seyfried_ModelDF <- Seyfried_resultmatrix %>%
dplyr::filter(rowID %in% c("P04075", "P14618", "P07195")) %>%
dplyr::select(Sample, 'rowID', DX, Intensity) %>%
spread(key = "rowID", value = "Intensity")
Seyfried_ModelDF <- data.frame(Seyfried_ModelDF)
Seyfried_ModelDF$DX <- as.factor(Seyfried_ModelDF$DX)
#Create the Model
Seyfried_MarkerPanel <- glm(DX ~ P04075 + P14618 + P07195, data = Seyfried_ModelDF, family = 'binomial')
Mann_ModelDF <- Mann_resultmatrix %>%
dplyr::filter(rowID %in% c("P04075", "P14618", "P07195")) %>%
dplyr::select(Sample, 'rowID', DX, Intensity) %>%
spread(key = "rowID", value = "Intensity")
Mann_ModelDF$DX <- as.factor(Mann_ModelDF$DX)
#Create the Model
Mann_MarkerPanel <- glm(DX ~ P04075 + P14618 + P07195, data = Mann_ModelDF, family = 'binomial')
Seyfried_ModelDF$Seyfried_panel <- predict(Seyfried_MarkerPanel, Seyfried_ModelDF)
Seyfried_ModelDF$Mann_panel <- predict(Mann_MarkerPanel, Seyfried_ModelDF)
Mann_ModelDF$Mann_panel <- predict(Mann_MarkerPanel, Mann_ModelDF)
Mann_ModelDF$Seyfried_panel <- predict(Seyfried_MarkerPanel, Mann_ModelDF)
seyfried_seyfriedmodel <- roc(DX ~ Seyfried_panel, Seyfried_ModelDF)
seyfried_mannmodel <- roc(DX ~ Mann_panel, Seyfried_ModelDF)
seyfried_ALDOA <- roc(DX ~ P04075, Seyfried_ModelDF)
seyfried_PKM <- roc(DX ~ P14618, Seyfried_ModelDF)
seyfried_LDHB <- roc(DX ~ P07195, Seyfried_ModelDF)
ROC_SEYFRIED <- ggroc(list("ALDOA (0.85)" = seyfried_ALDOA,
"PKM (0.82)" = seyfried_PKM,
"LDHB (0.79)" = seyfried_LDHB,
"Model Bader (0.87)" = seyfried_mannmodel,
"Model Johnson (0.87)" = seyfried_seyfriedmodel), lwd = 1.5) +
scale_color_brewer(palette = "Dark2") +
theme_pubr() +
theme(legend.position = "right",
text = element_text(family="serif")) +
coord_fixed()
plot(ROC_SEYFRIED)
Mann_seyfriedmodel <- roc(DX ~ Seyfried_panel, Mann_ModelDF)
Mann_mannmodel <- roc(DX ~ Mann_panel, Mann_ModelDF)
Mann_ALDOA <- roc(DX ~ P04075, Mann_ModelDF)
Mann_PKM <- roc(DX ~ P14618, Mann_ModelDF)
Mann_LDHB <- roc(DX ~ P07195, Mann_ModelDF)
ROC_MANN <- ggroc(list("ALDOA (0.81)" = Mann_ALDOA,
"PKM (0.78)" = Mann_PKM,
"LDHB (0.68)" = Mann_LDHB,
"Model Bader (0.82)" = Mann_mannmodel,
"Model Johnson (0.82)" = Mann_seyfriedmodel), lwd = 1.5) +
scale_color_brewer(palette = "Dark2") +
theme_pubr() +
theme(legend.position = "right",
text = element_text(family="serif"), aspect.ratio=1)
plot(ROC_MANN)
Mann_seyfriedmodel
Mann_mannmodel
Seyfried_panel
Mann_ModelDF
Mann_MarkerPanel
protein_1 <- P04075
protein_1 <- "P04075"
protein_2 <- "P14618"
protein_3 <- "P07195"
#create Mann data model
mann_model3_tempSelect <- mann_model3_prepare %>%
dplyr::select(DX, protein_1, protein_2, protein_3) %>%
drop_na()
model_mann <- glm(DX ~ ., data = mann_model3_tempSelect, family = 'binomial')
model_mann
#Use the models to create additional columns in the tempSelect DF's
seyfried_model3_tempSelect$model_seyfried <- predict(model_seyfried, seyfried_model3_tempSelect)
seyfried_model3_tempSelect$model_mann <- predict(model_mann, seyfried_model3_tempSelect)
mann_model3_tempSelect$model_seyfried <- predict(model_seyfried, mann_model3_tempSelect)
mann_model3_tempSelect$model_mann <- predict(model_mann, mann_model3_tempSelect)
#Get the AUROC's and apply them to the results DF
three_way_aruocs[number,1] <- paste(protein_1, protein_2, protein_3, sep = "_")
three_way_aruocs[number,2] <- roc(seyfried_model3_tempSelect$DX, seyfried_model3_tempSelect$model_seyfried)$auc
three_way_aruocs[number,3] <- roc(seyfried_model3_tempSelect$DX, seyfried_model3_tempSelect$model_mann)$auc
three_way_aruocs[number,4] <- roc(mann_model3_tempSelect$DX, mann_model3_tempSelect$model_seyfried)$auc
three_way_aruocs[number,5] <- roc(mann_model3_tempSelect$DX, mann_model3_tempSelect$model_mann)$auc
roc(seyfried_model3_tempSelect$DX, seyfried_model3_tempSelect$model_seyfried)$auc
roc(seyfried_model3_tempSelect$DX, seyfried_model3_tempSelect$model_mann)$auc
roc(mann_model3_tempSelect$DX, mann_model3_tempSelect$model_seyfried)$auc
roc(mann_model3_tempSelect$DX, mann_model3_tempSelect$model_mann)$auc
#Create Seyfried data model
seyfried_model3_tempSelect <- seyfried_model3_prepare %>%
dplyr::select(DX, protein_1, protein_2, protein_3) %>%
drop_na()
model_seyfried <- glm(DX ~ ., data = seyfried_model3_tempSelect, family = 'binomial')
#create Mann data model
mann_model3_tempSelect <- mann_model3_prepare %>%
dplyr::select(DX, protein_1, protein_2, protein_3) %>%
drop_na()
model_mann <- glm(DX ~ ., data = mann_model3_tempSelect, family = 'binomial')
#Use the models to create additional columns in the tempSelect DF's
seyfried_model3_tempSelect$model_seyfried <- predict(model_seyfried, seyfried_model3_tempSelect)
seyfried_model3_tempSelect$model_mann <- predict(model_mann, seyfried_model3_tempSelect)
mann_model3_tempSelect$model_seyfried <- predict(model_seyfried, mann_model3_tempSelect)
mann_model3_tempSelect$model_mann <- predict(model_mann, mann_model3_tempSelect)
number <- 1
#Create results DF
three_way_aruocs <- data.frame(matrix(ncol = 5, nrow = 0))
colnames(three_way_aruocs) <- c("ThreeProt", "seyfried_data_seyfried_model", "seyfried_data_mann_model", "mann_data_seyfried_model", "mann_data_mann_model")
#Get the AUROC's and apply them to the results DF
three_way_aruocs[number,1] <- paste(protein_1, protein_2, protein_3, sep = "_")
three_way_aruocs[number,2] <- roc(seyfried_model3_tempSelect$DX, seyfried_model3_tempSelect$model_seyfried)$auc
three_way_aruocs[number,3] <- roc(seyfried_model3_tempSelect$DX, seyfried_model3_tempSelect$model_mann)$auc
three_way_aruocs[number,4] <- roc(mann_model3_tempSelect$DX, mann_model3_tempSelect$model_seyfried)$auc
three_way_aruocs[number,5] <- roc(mann_model3_tempSelect$DX, mann_model3_tempSelect$model_mann)$auc
#Find Intersect of the 21 proteins significant that are found in BOTH seyfried and MANN data
topX_intersect <- base::intersect(unique(top21$Uniprot), unique(Seyfried_resultmatrix$rowID))
topX_intersect <- base::intersect(topX_intersect, unique(MANNDATA$rowID))
#Prepare the DF's
seyfried_model3_prepare <- Seyfried_resultmatrix %>%
filter(rowID %in% topX_intersect) %>%
spread(rowID, Intensity) %>%
column_to_rownames("Sample")
mann_model3_prepare <- MANNDATA %>%
filter(rowID %in% topX_intersect) %>%
#mutate(INTENSITY = ifelse(INTENSITY == NaN, NA, INTENSITY)) %>%
spread(rowID, INTENSITY) %>%
dplyr::select(-Thing, -Sample, - sample) %>%
mutate(DX = ifelse(DX == "CO", 0, 1))
#Create results DF
three_way_aruocs <- data.frame(matrix(ncol = 5, nrow = 0))
colnames(three_way_aruocs) <- c("ThreeProt", "seyfried_data_seyfried_model", "seyfried_data_mann_model", "mann_data_seyfried_model", "mann_data_mann_model")
number <- 1
for (protein_1 in topX_intersect){
for (protein_2 in topX_intersect){
for (protein_3 in topX_intersect){
if (protein_1 != protein_2 & protein_1 != protein_3 & protein_2 != protein_3){
#Create Seyfried data model
seyfried_model3_tempSelect <- seyfried_model3_prepare %>%
dplyr::select(DX, protein_1, protein_2, protein_3) %>%
drop_na()
model_seyfried <- glm(DX ~ ., data = seyfried_model3_tempSelect, family = 'binomial')
#create Mann data model
mann_model3_tempSelect <- mann_model3_prepare %>%
dplyr::select(DX, protein_1, protein_2, protein_3) %>%
drop_na()
model_mann <- glm(DX ~ ., data = mann_model3_tempSelect, family = 'binomial')
#Use the models to create additional columns in the tempSelect DF's
seyfried_model3_tempSelect$model_seyfried <- predict(model_seyfried, seyfried_model3_tempSelect)
seyfried_model3_tempSelect$model_mann <- predict(model_mann, seyfried_model3_tempSelect)
mann_model3_tempSelect$model_seyfried <- predict(model_seyfried, mann_model3_tempSelect)
mann_model3_tempSelect$model_mann <- predict(model_mann, mann_model3_tempSelect)
#Get the AUROC's and apply them to the results DF
three_way_aruocs[number,1] <- paste(protein_1, protein_2, protein_3, sep = "_")
three_way_aruocs[number,2] <- roc(seyfried_model3_tempSelect$DX, seyfried_model3_tempSelect$model_seyfried)$auc
three_way_aruocs[number,3] <- roc(seyfried_model3_tempSelect$DX, seyfried_model3_tempSelect$model_mann)$auc
three_way_aruocs[number,4] <- roc(mann_model3_tempSelect$DX, mann_model3_tempSelect$model_seyfried)$auc
three_way_aruocs[number,5] <- roc(mann_model3_tempSelect$DX, mann_model3_tempSelect$model_mann)$auc
#add number for next round
number <- number + 1
}
}
}
}
#Calculate the average of the test on train model ones
three_way_aruocs_changes <- three_way_aruocs %>%
mutate(averageAUROC = (seyfried_data_mann_model + mann_data_seyfried_model) / 2) %>%
distinct(averageAUROC, .keep_all = T)
5
View(top21)
View(three_way_aruocs)
View(three_way_aruocs_changes)
15*14
15*14*13
15*14*13*12
15^3
View(three_way_aruocs_changes)
#top100 <-
three_way_aruocs_changes %>%
top_n(averageAUROC)
#top100 <-
three_way_aruocs_changes %>%
top_n(averageAUROC, 100)
?top_n
#top100 <-
three_way_aruocs_changes %>%
slice_max(averageAUROC, 100)
#top100 <-
three_way_aruocs_changes %>%
slice_max(100, averageAUROC)
#top100 <-
three_way_aruocs_changes %>%
slice_max(100)
#top100 <-
three_way_aruocs_changes %>%
top_n(100)
#top100 <-
three_way_aruocs_changes %>%
top_n(100, averageAUROC)
#top100 <-
three_way_aruocs_changes %>%
top_n(100, averageAUROC) %>%
select(ThreeProt) %>%
separate(ThreeProt, sep = "_", into = c("p1", "p2", "p3"))
#top100 <-
three_way_aruocs_changes %>%
top_n(100, averageAUROC) %>%
dplyr::select(ThreeProt) %>%
separate(ThreeProt, sep = "_", into = c("p1", "p2", "p3"))
#top100 <-
three_way_aruocs_changes %>%
top_n(100, averageAUROC) %>%
dplyr::select(ThreeProt) %>%
separate(ThreeProt, sep = "_", into = c("p1", "p2", "p3")) %>%
gather(c("p1", "p2", "p3", var = "protein", value = "yo"))
?gather
#top100 <-
three_way_aruocs_changes %>%
top_n(100, averageAUROC) %>%
dplyr::select(ThreeProt) %>%
separate(ThreeProt, sep = "_", into = c("p1", "p2", "p3")) %>%
rownames_to_column() %>%
gather(c("p1", "p2", "p3", var = "protein", value = "yo"))
#top100 <-
three_way_aruocs_changes %>%
top_n(100, averageAUROC) %>%
dplyr::select(ThreeProt) %>%
separate(ThreeProt, sep = "_", into = c("p1", "p2", "p3")) %>%
rownames_to_column() %>%
gather(c("p1", "p2", "p3", key = "protein", value = "yo"))
three_way_aruocs_changes %>%
top_n(100, averageAUROC) %>%
dplyr::select(ThreeProt) %>%
separate(ThreeProt, sep = "_", into = c("p1", "p2", "p3")) %>%
rownames_to_column()
#top100 <-
three_way_aruocs_changes %>%
top_n(100, averageAUROC) %>%
dplyr::select(ThreeProt) %>%
separate(ThreeProt, sep = "_", into = c("p1", "p2", "p3")) %>%
rownames_to_column() %>%
gather(c("p1", "p2", "p3"), key = "protein", value = "yo")
#top100 <-
three_way_aruocs_changes %>%
top_n(100, averageAUROC) %>%
dplyr::select(ThreeProt) %>%
separate(ThreeProt, sep = "_", into = c("p1", "p2", "p3")) %>%
gather(c("p1", "p2", "p3"), key = "protein", value = "yo")
#top100 <-
three_way_aruocs_changes %>%
top_n(100, averageAUROC) %>%
dplyr::select(ThreeProt) %>%
separate(ThreeProt, sep = "_", into = c("p1", "p2", "p3")) %>%
gather(c("p1", "p2", "p3"), key = "protein", value = "Uniprot") %>%
select(Uniprot)
#top100 <-
three_way_aruocs_changes %>%
top_n(100, averageAUROC) %>%
dplyr::select(ThreeProt) %>%
separate(ThreeProt, sep = "_", into = c("p1", "p2", "p3")) %>%
gather(c("p1", "p2", "p3"), key = "protein", value = "Uniprot") %>%
dplyr::select(Uniprot)
#top100 <-
three_way_aruocs_changes %>%
top_n(100, averageAUROC) %>%
dplyr::select(ThreeProt) %>%
separate(ThreeProt, sep = "_", into = c("p1", "p2", "p3")) %>%
gather(c("p1", "p2", "p3"), key = "protein", value = "Uniprot") %>%
dplyr::select(Uniprot) %>%
group_by(Uniprot) %>%
count()
#top100 <-
three_way_aruocs_changes %>%
top_n(100, averageAUROC) %>%
dplyr::select(ThreeProt) %>%
separate(ThreeProt, sep = "_", into = c("p1", "p2", "p3")) %>%
gather(c("p1", "p2", "p3"), key = "protein", value = "Uniprot") %>%
dplyr::select(Uniprot) %>%
group_by(Uniprot) %>%
count()
top21
#top100 <-
three_way_aruocs_changes %>%
top_n(100, averageAUROC) %>%
dplyr::select(ThreeProt) %>%
separate(ThreeProt, sep = "_", into = c("p1", "p2", "p3")) %>%
gather(c("p1", "p2", "p3"), key = "protein", value = "Uniprot") %>%
dplyr::select(Uniprot) %>%
group_by(Uniprot) %>%
count() %>%
left_join(top21)
#top100 <-
three_way_aruocs_changes %>%
top_n(100, averageAUROC) %>%
dplyr::select(ThreeProt) %>%
separate(ThreeProt, sep = "_", into = c("p1", "p2", "p3")) %>%
gather(c("p1", "p2", "p3"), key = "protein", value = "Uniprot") %>%
dplyr::select(Uniprot) %>%
group_by(Uniprot) %>%
count() %>%
left_join(top21) %>%
ggplot(aes(x = n, y = Gene)) +
geom_point()
#top100 <-
three_way_aruocs_changes %>%
top_n(100, averageAUROC) %>%
dplyr::select(ThreeProt) %>%
separate(ThreeProt, sep = "_", into = c("p1", "p2", "p3")) %>%
gather(c("p1", "p2", "p3"), key = "protein", value = "Uniprot") %>%
dplyr::select(Uniprot) %>%
group_by(Uniprot) %>%
count() %>%
left_join(top21) %>%
ggplot(aes(x = n, y = reorder(Gene, n))) +
geom_point()
#top100 <-
three_way_aruocs_changes %>%
top_n(100, averageAUROC) %>%
dplyr::select(ThreeProt) %>%
separate(ThreeProt, sep = "_", into = c("p1", "p2", "p3")) %>%
gather(c("p1", "p2", "p3"), key = "protein", value = "Uniprot") %>%
dplyr::select(Uniprot) %>%
group_by(Uniprot) %>%
count() %>%
left_join(top21) %>%
ggplot(aes(x = n, y = reorder(Gene, n))) +
geom_point(size = 2)
#top100 <-
three_way_aruocs_changes %>%
top_n(100, averageAUROC) %>%
dplyr::select(ThreeProt) %>%
separate(ThreeProt, sep = "_", into = c("p1", "p2", "p3")) %>%
gather(c("p1", "p2", "p3"), key = "protein", value = "Uniprot") %>%
dplyr::select(Uniprot) %>%
group_by(Uniprot) %>%
count() %>%
left_join(top21) %>%
ggplot(aes(x = n, y = reorder(Gene, n))) +
geom_point(size = 2) +
theme_bw()
three_way_aruocs_changes %>%
top_n(100, averageAUROC) %>%
dplyr::select(ThreeProt) %>%
separate(ThreeProt, sep = "_", into = c("p1", "p2", "p3")) %>%
gather(c("p1", "p2", "p3"), key = "protein", value = "Uniprot") %>%
dplyr::select(Uniprot) %>%
group_by(Uniprot)
three_way_aruocs_changes %>%
separate(ThreeProt, sep = "_", into = c("p1", "p2", "p3")) %>%
left_join(top21$Gene)
three_way_aruocs_changes %>%
separate(ThreeProt, sep = "_", into = c("p1", "p2", "p3")) %>%
left_join(top21)
three_way_aruocs_changes %>%
separate(ThreeProt, sep = "_", into = c("p1", "p2", "p3"))
top21
top21protgene <- top21 %>% dplyr::select(Uniprot, Gene)
three_way_aruocs_changes %>%
separate(ThreeProt, sep = "_", into = c("p1", "p2", "p3")) %>%
left_join(top21protgene, by = c("p1" = "Uniprot"))
three_way_aruocs_changes %>%
separate(ThreeProt, sep = "_", into = c("p1", "p2", "p3")) %>%
left_join(top21protgene, by = c("p1" = "Uniprot")) %>%
left_join(top21protgene, by = c("p2" = "Uniprot")) %>%
left_join(top21protgene, by = c("p3" = "Uniprot"))
forHanno <- three_way_aruocs_changes %>%
separate(ThreeProt, sep = "_", into = c("p1", "p2", "p3")) %>%
left_join(top21protgene, by = c("p1" = "Uniprot")) %>%
left_join(top21protgene, by = c("p2" = "Uniprot")) %>%
left_join(top21protgene, by = c("p3" = "Uniprot"))
write.csv(forHanno, "threeCombinationAuroc.csv")
#top100 <-
three_way_aruocs_changes %>%
top_n(100, averageAUROC) %>%
dplyr::select(ThreeProt) %>%
separate(ThreeProt, sep = "_", into = c("p1", "p2", "p3")) %>%
gather(c("p1", "p2", "p3"), key = "protein", value = "Uniprot") %>%
dplyr::select(Uniprot) %>%
group_by(Uniprot) %>%
count() %>%
left_join(top21) %>%
ggplot(aes(x = n, y = reorder(Gene, n))) +
geom_point(size = 2) +
theme_bw() +
ggtitle("Count Proteins of the top100 AUROC's")
View(Zetterbergproteinclinical_Zscore)
